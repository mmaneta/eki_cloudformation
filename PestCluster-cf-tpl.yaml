Metadata:
  TemplateId: arn:aws:cloudformation:us-west-1:054507568115:generatedTemplate/98d198c2-9fe0-4f64-9d73-bf2152c10b15
AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSServiceName:
    Default: agents
    Type: String
  VpcID:
    Default: vpc-0acd01b37484623c8
    Type: String
  ECSClusterName:
    Default: PestCluster
    Type: String
Resources:
  ECSTaskDefinition00taskdefinitionpestagent600ELdqq:
    UpdateReplacePolicy: Retain
    Type: AWS::ECS::TaskDefinition
    DeletionPolicy: Retain
    Properties:
      ExecutionRoleArn: arn:aws:iam::054507568115:role/ecsTaskExecutionRole
      RuntimePlatform:
        OperatingSystemFamily: LINUX
        CpuArchitecture: X86_64
      Volumes: []
      InferenceAccelerators: []
      Memory: '3072'
      PlacementConstraints: []
      ContainerDefinitions:
        - ExtraHosts: []
          Secrets: []
          VolumesFrom: []
          Cpu: 1024
          EntryPoint: []
          DnsServers: []
          Image: 054507568115.dkr.ecr.us-west-1.amazonaws.com/ww_2024:dev
          Essential: true
          LogConfiguration:
            SecretOptions: []
            Options:
              awslogs-group: /ecs/pest_agent
              awslogs-create-group: 'true'
              awslogs-region: us-west-1
              awslogs-stream-prefix: ecs
            LogDriver: awslogs
          ResourceRequirements: []
          EnvironmentFiles: []
          Name: model
          MountPoints: []
          DependsOn: []
          DockerLabels: {}
          PortMappings:
            - ContainerPort: 4004
              Protocol: tcp
              HostPort: 4004
              Name: pest_port
          DockerSecurityOptions: []
          SystemControls: []
          Command:
            - agent_hp
            - wwgfm_hist_2024
            - /h
            - !Join
              - ':'
              - - !GetAtt ElasticLoadBalancingV2LoadBalancerEKIPestCluster.DNSName
                - '4004'
          DnsSearchDomains: []
          Environment: []
          Links: []
          CredentialSpecs: []
          Ulimits: []
      Cpu: '1024'
      RequiresCompatibilities:
        - EC2
      Family: pest_agent
      NetworkMode: bridge
      Tags: []
  ElasticLoadBalancingV2TargetGroup00targetgroupPestMain66534dd9f5e4946b00TP1jx:
    UpdateReplacePolicy: Delete
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DeletionPolicy: Delete
    Properties:
      IpAddressType: ipv4
      HealthCheckIntervalSeconds: 30
      Port: 4004
      Targets:
        - AvailabilityZone: us-west-1c
          Port: 4004
          Id: 10.10.21.47
      HealthCheckEnabled: true
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 10
      Name: PestMain
      VpcId: vpc-0acd01b37484623c8
      HealthyThresholdCount: 5
      HealthCheckProtocol: TCP
      TargetGroupAttributes:
        - Value: source_ip
          Key: stickiness.type
        - Value: '1'
          Key: target_group_health.dns_failover.minimum_healthy_targets.count
        - Value: use_load_balancer_configuration
          Key: load_balancing.cross_zone.enabled
        - Value: 'off'
          Key: target_group_health.dns_failover.minimum_healthy_targets.percentage
        - Value: 'false'
          Key: stickiness.enabled
        - Value: 'off'
          Key: target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage
        - Value: '0'
          Key: target_health_state.unhealthy.draining_interval_seconds
        - Value: '300'
          Key: deregistration_delay.timeout_seconds
        - Value: '1'
          Key: target_group_health.unhealthy_state_routing.minimum_healthy_targets.count
        - Value: 'false'
          Key: proxy_protocol_v2.enabled
        - Value: 'false'
          Key: deregistration_delay.connection_termination.enabled
        - Value: 'false'
          Key: preserve_client_ip.enabled
        - Value: 'true'
          Key: target_health_state.unhealthy.connection_termination.enabled
      TargetType: ip
      HealthCheckPort: traffic-port
      Protocol: TCP
      Tags: []
  ElasticLoadBalancingV2Listener00listenernetpesthostlb9add31f518fa0c2c2a9e45f4c2b2143e00TiaHx:
    UpdateReplacePolicy: Delete
    Type: AWS::ElasticLoadBalancingV2::Listener
    DeletionPolicy: Delete
    Properties:
      Protocol: TCP
      LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancerEKIPestCluster
      DefaultActions:
        - TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup00targetgroupPestMain66534dd9f5e4946b00TP1jx
          Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup00targetgroupPestMain66534dd9f5e4946b00TP1jx
      Port: 4004
  # EC2NatGatewayEKIPestCluster:
  #   UpdateReplacePolicy: Delete
  #   Type: AWS::EC2::NatGateway
  #   DeletionPolicy: Delete
  #   Properties:
  #     PrivateIpAddress: 10.10.25.173
  #     ConnectivityType: public
  #     AllocationId: eipalloc-0dc55f1e2c954367c
  #     SubnetId: subnet-03273ac6cfdbc7db0
  #     Tags:
  #       - Value: pest-cluster-nat
  #         Key: Name
  ElasticLoadBalancingV2LoadBalancerEKIPestCluster:
    UpdateReplacePolicy: Delete
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DeletionPolicy: Delete
    Properties:
      IpAddressType: ipv4
      SecurityGroups:
        - sg-055c893523bc9c50c
        - sg-065272e617ddc7d0a
      # LoadBalancerAttributes:
      #   - Value: ''
      #     Key: access_logs.s3.prefix
      #   - Value: 'false'
      #     Key: load_balancing.cross_zone.enabled
      #   - Value: 'false'
      #     Key: access_logs.s3.enabled
      #   - Value: eki-cf-logs
      #     Key: access_logs.s3.bucket
      #   - Value: 'false'
      #     Key: deletion_protection.enabled
      #   - Value: any_availability_zone
      #     Key: dns_record.client_routing_policy
      Subnets:
        - subnet-0d07b16a770fab48a
      Type: network
      Scheme: internal
      EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: ''
      Tags: []
      Name: pest-host-lb2
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: PestCluster
      CapacityProviderStrategy:
        - CapacityProvider: autoscaling-private-subnet-for-ecs
          Base: 0
          Weight: 1
      TaskDefinition: !Ref ECSTaskDefinition00taskdefinitionpestagent600ELdqq
      ServiceName: agent_private_net
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: ECS
      ServiceConnectConfiguration:
        Enabled: false
      PlacementStrategies:
        - Field: attribute:ecs.availability-zone
          Type: spread
        - Field: instanceId
          Type: spread
      PlacementConstraints: []
      Tags: []
      EnableECSManagedTags: true
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: subnet-03273ac6cfdbc7db0
      AllocationId: !GetAtt EIP.AllocationId
      Tags:
        - Key: Name
          Value: NAT Gateway
  EIP:
    Type: AWS::EC2::EIP
    Properties: {}
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: rtb-0a4d4e7bb90a8bf09
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway